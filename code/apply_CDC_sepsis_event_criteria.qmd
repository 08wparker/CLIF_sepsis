---
title: "Apply CDC Sepsis Event Criteria"
format: html
editor: visual
---

https://www.cdc.gov/sepsis/pdfs/sepsis-surveillance-toolkit-mar-2018_508.pdf

# Required packages

```{r}
library(here)
library(tidyverse)
library(gtsummary)
```

# Load in CLIF tables for cohort

```{r}
cohort_path <- here("study_cohort")
```

```{r}
load(here(paste0(cohort_path, "/01_clif_cohort_tables.RData")))
```

# Rhee

Presumed serious infection: Blood culture obtained (regardless of result), AND ≥4 QADs—starting within ±2 days of blood culture daya AND Acute organ dysfunction (any 1 of the following criteria within ±2 days of blood culture day): Vasopressor initiation (norepinephrine, dopamine, epinephrine, phenylephrine, or vasopressin)b Initiation of mechanical ventilationb Doubling in serum creatinine level or decrease by ≥50% of estimated glomerular filtration rate relative to baseline (excluding patients with ICD-9-CM code for end-stage kidney disease \[585.6\])c Total bilirubin level ≥2.0 mg/dL and doubling from baselinec Platelet count \<100 cells/µL and ≥50% decline from baseline (baseline must be ≥100 cells/µL)c Serum lactate ≥2.0 mmol/Ld Sepsis: Presumed serious infection plus ≥1 criteria for acute organ dysfunction Septic shock: Presumed serious infection plus vasopressor plus serum lactate level ≥2.0 mmol/L

# ASE: Adult Sepsis Event

(Must include the 2 components of criteria A **AND** include one or more organ dysfunction listed among B criteria)

## A. Presumed Infection (presence of both 1 and 2):

### **Blood culture obtained** (irrespective of the result), **AND**

```{r}
clif_microbiology_culture_cohort %>%
  group_by(fluid_name) %>%
  count(fluid_category) %>%
  arrange(-n)
# TO do: **At least 4 Qualifying Antimicrobial Days (QAD)** – starting within the time period 2 calendar days before and after the collection date of a blood culture.

clif_microbiology_culture_cohort %>%
  group_by(component_name) %>%
  count(component_category) %>%
  arrange(-n)
```

```{r}
blood_cultures <- clif_microbiology_culture_cohort %>% 
    filter(fluid_name == "culture, blood (bacterial & fungal)" 
           & grepl("culture", component_name)
           ) %>%
  select(hospitalization_id, blood_culture_collect_time = collect_dttm)
```

### **At least 4 Qualifying Antimicrobial Days (QAD)** – starting within the time period 2 calendar days before and after the collection date of a blood culture. See below.

### Combine blood culture and QAD to define `presumed_infection`

```{r}
# THIS CODE INCOMPLET
presumed_infection <- blood_cultures %>%
  arrange(hospitalization_id, blood_culture_collect_time) %>%
  group_by(hospitalization_id) %>%
  filter(row_number() == 1) %>%
  ungroup() %>%
  rename(time = blood_culture_collect_time) %>%
  mutate(presumed_infected = 1)

presumed_infection

presumed_infected_ids <- presumed_infection %>% pull(hospitalization_id) %>% unique()
```

```{r}
presumed_infection %>%
  left_join(clif_hospitalization_cohort %>% select(hospitalization_id, admission_dttm)) %>%
  mutate(time_to_presumed_infection = as.numeric(difftime(time, admission_dttm, units = "hours"))) %>%
  ggplot(aes(time_to_presumed_infection)) +
  geom_histogram(binwidth = 1) + 
  lims(x =c(0,24*7)) + 
  labs(x = "Hours since admission to first blood culture")
```

**AND**

## B. Organ Dysfunction (at least 1 of the following criteria met within the time period 2 calendar days before and after the collection date of a blood culture):

### **Initiation of a new vasopressor infusion** (norepinephrine, dopamine, epinephrine, phenylephrine, OR vasopressin). To count as a new vasopressor, that specific vasopressor cannot have been administered in the prior calendar day. See Appendix B.

```{r}
long_sepsis_vasoactives <- clif_medication_admin_continuous_cohort %>%
      filter(med_category %in% c("norepinephrine", "epinephrine", "phenylephrine", "vasopressin", "dopamine", "angiotensin")) %>%
      select(hospitalization_id, time = admin_dttm, med_category, med_dose)  %>%
  left_join(presumed_infection %>% select(hospitalization_id, presumed_infection_dttm = time)) %>% 
  mutate(qualifying_shock_start = ifelse(time > presumed_infection_dttm - days(2) & time < presumed_infection_dttm + days(2), 1, 0)) %>%
  select(hospitalization_id, time, presumed_infection_dttm, med_dose, med_category, qualifying_shock_start, )

long_sepsis_vasoactives %>% head()
```


```{r}
first_qualifying_shock_start <- long_sepsis_vasoactives %>%
  filter(qualifying_shock_start == 1) %>%
  group_by(hospitalization_id) %>%
  arrange(time) %>%
  filter(row_number() == 1)

shock_ids <- first_qualifying_shock_start %>% pull(hospitalization_id) %>% unique()
```


```{r}
first_qualifying_shock_start
```
#### Distribution of vasocative doses

```{r}
long_sepsis_vasoactives %>%
  group_by(hospitalization_id, time, med_category) %>%
  summarize(med_dose = mean(med_dose, na.rm = TRUE)) %>%
  pivot_wider(names_from = med_category, values_from = med_dose) %>%
  ungroup() %>%
  select(-hospitalization_id, -time) %>%
  summary()
```

###  **Initiation of invasive mechanical ventilation** (must be greater than 1 calendar day between mechanical ventilation episodes). Invasive mechanical ventilation can be identified by:
    -   ICD-10 Procedure Codes: 5A1935Z, 5A1945Z, 5A1955Z
    -   CPT codes: 94002, 94003, 94004, 94656, 94657
    -   Other clinical records.

```{r}
long_sepsis_IMV <- clif_respiratory_support_cohort %>%
  filter(device_category == "IMV") %>%
  select(hospitalization_id, time = recorded_dttm, device_category) %>%
  left_join(presumed_infection %>% select(hospitalization_id, presumed_infection_dttm = time)) %>% 
   mutate(qualifying_vent_start = 
            ifelse(time > presumed_infection_dttm - days(2) & time < presumed_infection_dttm + days(2), 1, 0)) %>%
  select(hospitalization_id, time, presumed_infection_dttm, device_category, qualifying_vent_start)

long_sepsis_IMV %>% head()


```
```{r}
first_qualifying_vent_start <- long_sepsis_IMV %>%
  filter(qualifying_vent_start == 1) %>%
  group_by(hospitalization_id) %>%
  arrange(time) %>%
  filter(row_number() == 1)

vent_ids <- first_qualifying_vent_start %>% pull(hospitalization_id) %>% unique()
```

### Lab criteria
```{r}
long_sepsis_labs <- clif_labs_cohort %>%
  filter(lab_category %in% c("lactate", "creatinine", "bilirubin_total", "platelet_count")) %>%
  select(hospitalization_id, lab_category, lab_value_numeric, time = lab_result_dttm) 
```

#### Lab measurement checks
```{r}
hospitalization_days <- clif_hospitalization_cohort %>%
  select(hospitalization_id, admission_dttm, discharge_dttm) %>%
  mutate(length_of_stay = as.numeric(as.Date(discharge_dttm) - as.Date(admission_dttm), 
                                     units = "days") +1)  %>%
  select(hospitalization_id, length_of_stay)

labs_measurement_per_hospitalization <- long_sepsis_labs %>%
  group_by(hospitalization_id) %>%
  count(lab_category) %>%
  pivot_wider(names_from = lab_category, values_from = n) %>%
  #fill NAs to zero for creatinine, lactate, bilirubin_total, platelet_count
  mutate(across(c(creatinine, lactate, bilirubin_total, platelet_count), ~ifelse(is.na(.), 0, .))) %>%
  left_join(hospitalization_days) %>%
  #calculate lab measurements per day
  mutate(across(c(creatinine, lactate, bilirubin_total, platelet_count), ~./length_of_stay))

labs_measurement_per_hospitalization %>%
  pivot_longer(cols = c(creatinine, lactate, bilirubin_total, platelet_count), names_to = "lab_category", values_to = "measurements_per_day") %>%
  ggplot(aes(measurements_per_day)) +
  geom_histogram(binwidth = 0.1) + labs(x = "Lab measurements per day") + facet_wrap(~lab_category, scales = "free_y") +
  lims(x = c(0, 5))
```

```{r}
labs_measurement_per_hospitalization %>%
  ungroup() %>%
  select(-hospitalization_id) %>% 
  summary()
```

```{r}
labs_measurement_per_hospitalization %>%
  pivot_longer(cols = c(creatinine, lactate, bilirubin_total, platelet_count), names_to = "lab_category", values_to = "measurements_per_day") %>%
  ggplot(aes(x = lab_category, y = measurements_per_day)) +
  geom_boxplot() + labs(y = "Lab measurements per day") 
```

```{r}
no_lab_hospitalizations <- labs_measurement_per_hospitalization %>%
  filter(creatinine == 0 & lactate == 0 & bilirubin_total == 0 & platelet_count == 0)

no_lab_hospitalizations
```

####  **Doubling of serum creatinine** OR decrease by ≥50% of estimated glomerular filtration rate (eGFR) relative to baseline (see below), excluding patients with ICD-10 code for end-stage renal disease (N18.6). (If eGFR values are not readily available, creatinine alone can be used to determine renal dysfunction).

```{r}
baseline_creatinine <- long_sepsis_labs %>%
  filter(lab_category == "creatinine") %>%
  group_by(hospitalization_id) %>%
  arrange(time) %>%
  filter(row_number() ==1) %>%
  rename(baseline_creatinine = lab_value_numeric) %>%
  select(hospitalization_id, baseline_creatinine, first_creatinine_time = time)

creatinine_trends <- long_sepsis_labs %>%
  filter(lab_category == "creatinine") %>%
  rename(creatinine = lab_value_numeric) %>%
  left_join(baseline_creatinine) %>%
  select(hospitalization_id, time, creatinine, baseline_creatinine, first_creatinine_time) %>%
  mutate(creatinine_change = creatinine/baseline_creatinine,
         aki = ifelse(creatinine_change >= 2, 1, 0)) %>%
  arrange(hospitalization_id, time) %>%
  left_join(presumed_infection %>% select(hospitalization_id, presumed_infection_dttm = time)) %>% 
  mutate(qualifying_aki = 
            ifelse(aki == 1 & time > presumed_infection_dttm - days(2) & time < presumed_infection_dttm + days(2), 1, 0))


creatinine_trends

aki_ids <- creatinine_trends %>%
  filter(qualifying_aki == 1) %>%
  pull(hospitalization_id) %>%
  unique()

first_qualifying_aki <- creatinine_trends %>%
  filter(qualifying_aki == 1) %>%
  group_by(hospitalization_id) %>%
  filter(row_number() ==1)
```

### visualize creatinine trends

```{r}
creatinine_trends %>%
  filter(hospitalization_id == aki_ids[[100]])%>%
  ggplot(aes(x = time, y = creatinine, color = factor(aki), group = hospitalization_id)) +
  geom_point() + geom_line() + labs(x = "Days since first creatinine", 
                                    y = "Creatinine (mg/dL)", 
                                    color = "AKI")

```

#### **Total bilirubin ≥ 2.0 mg/dL** and increase by 100% from baseline (see below).

```{r}
baseline_bilirubin <- long_sepsis_labs %>%
  filter(lab_category == "bilirubin_total") %>%
  group_by(hospitalization_id) %>%
  arrange(time) %>%
  filter(row_number() ==1) %>%
  rename(baseline_bilirubin = lab_value_numeric) %>%
  select(hospitalization_id, baseline_bilirubin, first_bilirubin_time = time)

bilirubin_trends <- long_sepsis_labs %>%
  filter(lab_category == "bilirubin_total") %>%
  rename(bilirubin = lab_value_numeric) %>%
  left_join(baseline_bilirubin) %>%
  select(hospitalization_id, time, bilirubin, baseline_bilirubin, first_bilirubin_time) %>%
  mutate(bilirubin_change = bilirubin/baseline_bilirubin,
         hyperbilirubinemia = ifelse(bilirubin>=2 & bilirubin_change >= 2, 1, 0)) %>%
  arrange(hospitalization_id, time) %>%
  left_join(presumed_infection %>% select(hospitalization_id, presumed_infection_dttm = time)) %>% 
  mutate(qualifying_hyperbilirubinemia = 
            ifelse(hyperbilirubinemia == 1 & time > presumed_infection_dttm - days(2) & time < presumed_infection_dttm + days(2), 1, 0))

bilirubin_trends %>% head()

hyperbilirubinemia_ids <- bilirubin_trends %>%
  filter(qualifying_hyperbilirubinemia == 1) %>%
  pull(hospitalization_id) %>%
  unique()

first_qualifying_hyperbilirubinemia <- bilirubin_trends %>%
  filter(qualifying_hyperbilirubinemia == 1) %>%
  group_by(hospitalization_id) %>%
  filter(row_number() ==1)
```

##### visualize bilirubin trends
```{r}
bilirubin_trends %>%
  filter(hospitalization_id == hyperbilirubinemia_ids[[100]])%>%
  mutate(days = as.numeric(difftime(time, first_bilirubin_time, units = "days"))) %>%
  ggplot(aes(x = days, y = bilirubin, color = factor(hyperbilirubinemia), 
             group = hospitalization_id)) +
  geom_point() + geom_line() + labs(x = "Days since first bilirubin", 
                                    y = "Bilirubin (mg/dL)", 
                                    color = "Hyperbilirubinemia")
```


#### **Platelet count \<100 cells/μL** AND ≥50% decline from baseline (see below) – baseline must be ≥100 cells/μL.

```{r}
baseline_platelet <- long_sepsis_labs %>%
  filter(lab_category == "platelet_count") %>%
  group_by(hospitalization_id) %>%
  arrange(time) %>%
  filter(row_number() ==1) %>%
  rename(baseline_platelet = lab_value_numeric) %>%
  select(hospitalization_id, baseline_platelet, first_platelet_time = time)

platelet_trends <- long_sepsis_labs %>%
  filter(lab_category == "platelet_count") %>%
  rename(platelet = lab_value_numeric) %>%
  left_join(baseline_platelet) %>%
  select(hospitalization_id, time, platelet, baseline_platelet, first_platelet_time) %>%
  mutate(platelet_change = platelet/baseline_platelet,
         thrombocytopenia = ifelse(platelet < 100 & platelet_change <= 0.5, 1, 0)) %>%
  arrange(hospitalization_id, time) %>%
  left_join(presumed_infection %>% select(hospitalization_id, presumed_infection_dttm = time)) %>% 
  mutate(qualifying_thrombocytopenia = 
            ifelse(thrombocytopenia == 1 & time > presumed_infection_dttm - days(2) & time < presumed_infection_dttm + days(2), 1, 0))

platelet_trends

thrombocytopenia_ids <- platelet_trends %>%
  filter(qualifying_thrombocytopenia == 1) %>%
  pull(hospitalization_id) %>%
  unique()


first_qualifying_thrombocytopenia <- platelet_trends %>%
  filter(qualifying_thrombocytopenia == 1) %>%
  group_by(hospitalization_id) %>%
  filter(row_number() ==1)
```


```{r}
platelet_trends %>%
  filter(hospitalization_id == thrombocytopenia_ids[[100]])
```

## TO DO: handle non-numeric platelet values
```{r}
clif_labs_cohort %>%
  filter(lab_category == "platelet_count") %>%
  filter(is.na(lab_value_numeric) == TRUE) %>%
  count(lab_value)
```

#### visualize platelet trends
```{r}
platelet_trends %>%
  filter(hospitalization_id == thrombocytopenia_ids[[100]])%>%
  ggplot(aes(x = time, y = platelet, color = factor(thrombocytopenia), 
             group = hospitalization_id)) +
  geom_point() + geom_line() + labs(x = "Days since first platelet count", 
                                    y = "Platelet count (cells/μL)", 
                                    color = "Thrombocytopenia")
```

#### **Optional**: Serum lactate ≥ 2.0 mmol/L. Note that serum lactate has become an increasingly common test to measure tissue perfusion. When serum lactate is included in the surveillance definition, the likely effect will be to slightly increase the number of sepsis cases identified. However, if serum lactate ordering practices are not stable over time in a particular hospital, this will bias the incidence of sepsis. For this reason, serum lactate was not used in the primary analysis of sepsis trends over time in the original study by Rhee et al.

```{r}
lactate_trends <- long_sepsis_labs %>%
  filter(lab_category == "lactate") %>%
  rename(lactate = lab_value_numeric) %>%
  mutate(hyperlactatemia = ifelse(lactate >= 2, 1, 0)) %>%
  arrange(hospitalization_id, time) %>%
  left_join(presumed_infection %>% select(hospitalization_id, presumed_infection_dttm = time)) %>% 
  mutate(qualifying_hyperlactatemia = 
            ifelse(hyperlactatemia == 1 & 
                     time > presumed_infection_dttm - days(2) & time < presumed_infection_dttm + days(2), 1, 0))

lactate_trends %>%
  group_by(hyperlactatemia) %>%
  summarize(n = n(),
            mean_lactate = mean(lactate, na.rm = TRUE),
            sd_lactate = sd(lactate, na.rm = TRUE))

hyperlactatemia_ids <- lactate_trends %>%
  filter(qualifying_hyperlactatemia == 1) %>%
  pull(hospitalization_id) %>%
  unique()

first_qualifying_hyperlactatemia <- lactate_trends %>%
  filter(qualifying_hyperlactatemia == 1) %>%
  group_by(hospitalization_id) %>%
  filter(row_number() ==1)

```

# identify sepsis
```{r}
# hospitalization_id with sepsis
sepsis_id <- c(aki_ids, hyperbilirubinemia_ids, thrombocytopenia_ids, shock_ids, vent_ids, hyperlactatemia_ids) %>% unique()

organ_dysfunction_times <- tibble(hospitalization_id = sepsis_id) %>%
  left_join(first_qualifying_vent_start %>% select(hospitalization_id, vent_time = time)) %>%
  left_join(first_qualifying_shock_start %>% select(hospitalization_id, shock_time = time)) %>%
  left_join(first_qualifying_aki %>% select(hospitalization_id, aki_time = time)) %>%
  left_join(first_qualifying_hyperbilirubinemia %>% select(hospitalization_id, hyperbilirubinemia_time = time)) %>%
  left_join(first_qualifying_thrombocytopenia %>% select(hospitalization_id, thrombocytopenia_time = time)) %>%
  left_join(first_qualifying_hyperlactatemia %>% select(hospitalization_id, hyperlactatemia_time = time)) %>%
  left_join(presumed_infection %>% select(hospitalization_id, presumed_infection_time = time)) %>%
  mutate(earliest_organ_dysfunction_time = pmin(vent_time, shock_time, aki_time, hyperbilirubinemia_time, thrombocytopenia_time, hyperlactatemia_time, na.rm = TRUE))

```






```{r}
organ_dysfunction_times <- organ_dysfunction_times %>%
  mutate(earliest_time_no_lactate = pmin(vent_time, shock_time, aki_time, hyperbilirubinemia_time, thrombocytopenia_time, na.rm = TRUE)) %>%
  mutate(lactate_early_dx = ifelse(hyperlactatemia_time < earliest_time_no_lactate, 1, 0),
         # convert POSIXct to numeric and calculate difference in hours between earliest_time_no_lactate and earliest_organ_dysfunction_time
         dx_time_gained_with_lactate = as.numeric(difftime(earliest_time_no_lactate, earliest_organ_dysfunction_time, units = "hours")))
```

```{r}
organ_dysfunction_times %>%
  group_by(lactate_early_dx) %>%
  summarize(n = n(),
            mean_dx_time_gained = mean(dx_time_gained_with_lactate, na.rm = TRUE),
            sd_dx_time_gained = sd(dx_time_gained_with_lactate, na.rm = TRUE))
```

```{r}
641/length(sepsis_id)
```



# organ dysfunction criteria for each case
```{r}
organ_dysfunction_criteria <- organ_dysfunction_times %>%
  rename(
    IMV = vent_time,
    vasopressor = shock_time,
    aki = aki_time,
    hyperbilirubinemia = hyperbilirubinemia_time,
    thrombocytopenia = thrombocytopenia_time,
    hyperlactatemia = hyperlactatemia_time
  ) %>%
  select(-earliest_organ_dysfunction_time, -presumed_infection_time) %>%
  pivot_longer(cols = IMV:hyperlactatemia, names_to = "organ_dysfunction", values_to = "time") %>%
  filter(!is.na(time)) %>%
  arrange(hospitalization_id, time)

organ_dysfunction_criteria
```

# wide format for sepsis evaluation
```{r}
wide_sepsis_monitoring_dataset <-long_sepsis_labs %>%
  group_by(hospitalization_id, time, lab_category) %>%
  summarize(lab_value_numeric = mean(lab_value_numeric, na.rm = TRUE)) %>%
  pivot_wider(names_from = lab_category, values_from = lab_value_numeric) %>%
  full_join(long_sepsis_IMV) %>%
  full_join(
      long_sepsis_vasoactives %>%
      group_by(hospitalization_id, time, med_category) %>%
      summarize(med_dose = mean(med_dose, na.rm = TRUE)) %>%
      pivot_wider(names_from = med_category, values_from = med_dose)
  ) %>%
  full_join(presumed_infection) %>%
  arrange(hospitalization_id, time)

wide_sepsis_monitoring_dataset
```




# summarize sepsis cases prior to blood culture order
```{r}
sepsis_case_summary <- wide_sepsis_monitoring_dataset %>%
  filter(hospitalization_id %in% sepsis_id & time < presumed_infected) 

sepsis_case_summary %>%
group_by(hospitalization_id) %>%
  summarize(across(c(creatinine, lactate, bilirubin_total), ~max(.x, na.rm = TRUE)))
            #platelet_count = min(platelet_count, na.rm = TRUE),
            #device_category = ifelse(sum(!is.na(device_category)) > 0, 1, 0),
            #across(c(norepinephrine, epinephrine, phenylephrine, vasopressin, dopamine, angiotensin), ~max(.x, na.rm = TRUE)))
```

# sespsis plot
```{r}

sepsis_plot <- function(id){
    admit_time <- clif_hospitalization_cohort %>%
    filter(hospitalization_id == id) %>%
    pull(admission_dttm)
    
    outcome <- clif_hospitalization_cohort %>%
    filter(hospitalization_id == id) %>%
      mutate(died = ifelse(discharge_category == "Expired", "Died", "Survived")) %>%
    pull(died)
    
    sepsis_time <- organ_dysfunction_times %>%
    filter(hospitalization_id == id) %>%
    mutate(earliest_organ_dysfunction_time = as.numeric(difftime(earliest_organ_dysfunction_time, admit_time, unit = "days"))) %>%
    pull(earliest_organ_dysfunction_time)
    
    suspected_infection_time <- organ_dysfunction_times %>%
    filter(hospitalization_id == id) %>%
    mutate(presumed_infection_time = as.numeric(difftime(presumed_infection_time, admit_time, unit = "days"))) %>%
    pull(presumed_infection_time)
  
    vent_pressor_times <- vent_pressor_times %>%
    filter(hospitalization_id == id & organ_dysfunction %in% c("IMV", "vasopressor")) %>%
    select(organ_dysfunction, time) %>%
    mutate(time = as.numeric(difftime(time, admit_time, unit = "days"))) %>%
    pivot_wider(names_from = organ_dysfunction, values_from = time)
  
    dysfunction_criteria <- organ_dysfunction_criteria %>%
    filter(hospitalization_id == id)  %>%
    arrange(time) %>%
    filter(row_number() == 1) %>% 
    pull(organ_dysfunction) 

  
    p <- long_sepsis_labs %>%
    filter(hospitalization_id == id) %>%
    mutate(time = as.numeric(difftime(time, admit_time, unit = "days")),
           sepsis = ifelse(time > sepsis_time, "sepsis", "pre-sepsis")) %>%
    ggplot(aes(x = time, y = lab_value_numeric, color = sepsis)) +
    geom_point() + geom_line() + facet_wrap(~lab_category, scales = "free_y") +
    #vertical line for suspected infection time
    geom_vline(aes(xintercept = suspected_infection_time, linetype = "suspected infection"), color = "red") + 
    labs(title = paste0("First organ dysfunction criteria = ", dysfunction_criteria, ", outcome = ", outcome), 
         x = "days since admission", y = "lab value", linetype = "", color = "") + 
      theme_minimal() +   # Clean theme
    scale_color_manual(values = c("pre-sepsis" = "orange", "sepsis" = "purple")) 
    
        # Check if IMV exists in vent_pressor_times before plotting the IMV line
    if("IMV" %in% names(vent_pressor_times) && !is.na(vent_pressor_times$IMV)) {
        p <- p + geom_vline(data = vent_pressor_times, aes(xintercept = IMV, linetype = "IMV"), color = "blue")
    }

    # Check if vasopressor exists in vent_pressor_times before plotting the vasopressor line
    if("vasopressor" %in% names(vent_pressor_times) && !is.na(vent_pressor_times$vasopressor)) {
        p <- p + geom_vline(data = vent_pressor_times, aes(xintercept = vasopressor, linetype = "vasopressor"), color = "green")
    }
    
    p
}

sepsis_plot(sepsis_id[90])
```

```{r}
sepsis_plot(sepsis_id[300])
```

```{r}
sepsis_plot(sepsis_id[500])
```

```{r}
sepsis_plot(sepsis_id[700])
```









# INCOMPLETE
```{r}
sepsis_report <- function(id){
  discharge_outcome <- clif_hospitalization_cohort %>%
    filter(hospitalization_id == id) %>%
    pull(discharge_category)
  
  sepsis_time <- first_sepsis_criteria %>%
    filter(hospitalization_id == id) %>%
    filter(row_number() == 1) %>%
    pull(sepsis_time)
  
  sepsis_criteria <- first_sepsis_criteria %>%
    filter(hospitalization_id == id) %>%
    filter(row_number() == 1) %>%
    pull(first_sepsis_criteria)
  
  print(sepsis_time)
  
  lab_plot <- wide_sepsis_dataset %>%
  filter(hospitalization_id == id & is.na(lab_category) == FALSE) %>%
  mutate(sepsis = ifelse(time > sepsis_time, "sepsis", "pre-sepsis")) %>% 
  ggplot(aes(x = time, y = lab_value_numeric, color = sepsis)) +
  geom_point() + geom_line() + facet_wrap(~ lab_category, scales = "free_y") +
  labs(title = paste0("Sepsis criteria = ", sepsis_criteria, ", Patient outcome = ", discharge_outcome))
  
  
  vasopressor_plot <- wide_sepsis_dataset %>%
    filter(hospitalization_id == id & is.na(med_category) == FALSE) %>%
    mutate(sepsis = ifelse(time > sepsis_time, "sepsis", "pre-sepsis")) %>% 
    ggplot(aes(x = time, y = med_dose, color = sepsis)) +
    geom_point() + geom_line() + facet_wrap(~med_category, scales = "free_y")
  
  
  
  resp_support_trend <- clif_respiratory_support_cohort
    filter(hospitalization_id == id) %>% 
    select(hospitalization, time = recorded_dttm, device_category)
  
  lab_plot
  vasopressor_plot
}

sepsis_report(aki_ids[100])


first_sepsis_criteria %>% 
  filter(hospitalization_id == aki_ids[100])


```

```{r}
visualize_patient_course <- function(id){
  dispo <- clif_hospitalization_cohort %>%
    filter(hospitalization_id == id) %>%
    pull(discharge_category)
  

clif_respiratory_support_cohort %>%
  mutate(device_category = factor(device_category, levels = c("IMV", "NIPPV", "CPAP", "High Flow NC", "Nasal Cannula", "Room Air"))) %>% 
  filter(hospitalization_id == id) %>%
  fill(device_category, .direction = "down" ) %>% 
  fill(mode_category, .direction = "down" ) %>% 
  filter(is.na(device_category) == FALSE) %>% 
  mutate(mode_category = ifelse(device_category %in% c("High Flow NC", 
                                                    "Nasal Cannula",
                                                   "Room Air"), NA, mode_category)) %>%
  rename(time = recorded_dttm) %>%
  ggplot(aes(x = time, 
             y = device_category,
             color = mode_category,
             fill = mode_category)) +
  geom_tile(width = 1) +
  theme(legend.position = "bottom",
        legend.direction = "horizontal", 
        legend.box = "horizontal",
        legend.text = element_text(size = 8),
        legend.title = element_text(size = 10)) + 
  labs(color = "", fill = "", x = "time",
       title = paste0("Patient disposition = ", dispo)) 
}


```

```{r}
visualize_patient_course(aki_ids[100])
```

```{r}
ever_icu <- clif_adt_cohort %>%
  filter(location_category == "ICU") %>%
  select(hospitalization_id) %>%
  mutate(ever_icu = 1) %>%
  unique()
table_one_hospitalization <-clif_hospitalization_cohort %>%
  mutate(length_of_stay = as.numeric(as.Date(discharge_dttm) - as.Date(admission_dttm), 
                                     units = "days")) %>%
  select(patient_id, hospitalization_id, age_at_admission, discharge_category, admission_type_name, length_of_stay) %>%
  mutate(sepsis = ifelse(hospitalization_id %in% sepsis_id, 1, 0)) %>%
  left_join(clif_patient_cohort %>% select(patient_id, race_category, sex_category, 
                                           ethnicity_category, language_name)) %>% 
  left_join(ever_icu, by = "hospitalization_id") %>%
  mutate(ever_icu = ifelse(is.na(ever_icu), 0, 1)) %>%
  select(-patient_id, - hospitalization_id) %>%
  tbl_summary(by = sepsis)

table_one_hospitalization

#export the table with gtsummary
table_one_hospitalization |> 
  as_gt() |> 
  gt::gtsave(filename = here(paste0(cohort_path, "/table_one_sepsis.pdf")))
```

# Lab frequency qc check

Creatinine should be measured at least once every 24 hours for most hospitalized adults

```{r}

hospitalization_days <- clif_hospitalization_cohort %>%
  select(hospitalization_id, admission_dttm, discharge_dttm) %>%
  mutate(admission_day = as.Date(admission_dttm),
         discharge_day = as.Date(discharge_dttm)) %>%
  select(-admission_dttm, -discharge_dttm)

# create one observation per calendar day per hospitalization_id
hospitalization_days <- hospitalization_days %>%
  rowwise() %>%
  mutate(day = list(seq(admission_day, discharge_day, by = "1 day"))) %>%
  unnest(cols = day)

creatine_per_day <- clif_labs_cohort %>%
  filter(lab_category == "creatinine") %>%
  group_by(hospitalization_id) %>%
  arrange(lab_result_dttm) %>%
  mutate(day = as.Date(lab_result_dttm)) %>% 
  group_by(hospitalization_id, day) %>%
  summarize(n = n()) 

creatine_per_day <- hospitalization_days %>%
  select(hospitalization_id, day) %>%
  left_join(creatine_per_day) %>%
  mutate(n = ifelse(is.na(n), 0, n))


creatine_per_day %>%
  ggplot(aes(n)) +
  geom_histogram(binwidth = 1) + labs(x = "Number of creatinine measurements per day")
```

# create a table one of septic patients stratified by IMV status 
```{r}
table_one_sepsis_IMV <- clif_hospitalization_cohort %>%
  mutate(length_of_stay = as.numeric(as.Date(discharge_dttm) - as.Date(admission_dttm), 
                                     units = "days")) %>%
  select(patient_id, hospitalization_id, age_at_admission, discharge_category, admission_type_name, length_of_stay) %>%
  mutate(sepsis = ifelse(hospitalization_id %in% sepsis_id, 1, 0)) %>%
  left_join(clif_patient_cohort %>% select(patient
```


